# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'json'
require_relative '../xt/preamble.rb'
require_relative '../xt/hardware.rb'
require_relative '../xt/browser.rb'

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'
ENV['VAGRANT_LOG'] = 'debug'
# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"


CONFIG = File.join(File.dirname(__FILE__), "config.rb")

# Defaults for config options defined in CONFIG
# FIX https://github.com/coreos/coreos-vagrant/issues/98
$enable_serial_logging = false

if File.exist?(CONFIG)
  require CONFIG
end

######################################################
#                                                    #
#                   VM-CHEF-SERVER                   #
#                   **************                   #
#                                                    #
######################################################
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Checks prequisites and plugins
  pre = Preamble.new(config)
  
  # Calculate Resources
  hard = Hardware.new(8, 6144) # CPUs, RAM
  using_cpus = hard.processing_units
  using_memory = hard.memory_mb / 4 # 1/2 RAM
  puts "Found #{hard.processing_units} Cores. Using #{using_cpus} Cores"
  puts "Found #{hard.memory_mb} MB Memory. Using #{using_memory} MB Memory"
  
  
  {
    [:up] => "https://192.168.1.2:9191/",
    [:provision] => "https://192.168.1.2:9191/",
    [:resume] => "https://192.168.1.2:9191/",
    #[:suspend] => "",
    #[:halt] => "",
    #[:destroy] => ""
  }.each do |command, trigger|
    config.trigger.after command, :stdout => true, :force => true do
      Browser.new().open(trigger)
    end
  end
  
  config.vm.network :private_network, ip: "192.168.1.2"
  # Chef-Server-Ports
  config.vm.network :forwarded_port, guest: 9191, host: 9191
  
  config.vm.synced_folder "../data/", "/data"
  config.vm.synced_folder "../data/logs/", "/var/log"
  
  config.vm.provider "virtualbox" do |vb|
    vb.name = "vm-chef-server"
    vb.customize ["modifyvm", :id, "--cpuexecutioncap", "80"]
    vb.customize ["modifyvm", :id, "--cpus", using_cpus]
    vb.customize ["modifyvm", :id, "--memory", using_memory]
    vb.gui = false
    
    # Fix tsc unstable -> "kernel: Clocksource tsc unstable (delta = 302978408 ns).  Enable clocksource failover by adding clocksource_failover kernel parameter."
    #vb.customize ["guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--enable-timesync"]
    # Fix symlinks -> Vagrant-713: https://github.com/mitchellh/vagrant/issues/713
    vb.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root", "1"]
    vb.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate//data", "1"]
    vb.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate//tmp/vagrant-cache", "1"]
  end
  
  
  # Definition of the Proxy-Instance running docker containers
  config.vm.define "vm-chef-server" do |host|
    host.vm.hostname = "vm-chef-server"
    #host.vm.post_up_message = 'Welcome to the We Love Coding: Chef-Server!'
    host.vm.box_url = "file://../wlc-boxes/builds/virtualbox/wlc_centos-6.6_chef-11.16.4_docker-1.3.1.box"
    host.vm.box = "wlc/centos-6.6"
    #host.vm.box = "chef/centos-6.6"
    #host.ssh.username = "vagrant"
    
    host.vm.provision "docker"
    host.vm.provision "shell", path: "../data/scripts/docker/docker_load_images"
    host.vm.provision "docker" do |d|
      d.build_image "/data/minivm", args: "-t yserz/docker-vagrant-centos-7-minivm"
      d.version = :latest # Default is :latest
    end
    host.vm.provision "shell", path: "../data/scripts/docker/docker_save_images"
    
    
    if Vagrant.has_plugin?('vagrant-triggers')
      # config.trigger.before :destroy, :stdout => true, :force => true do
      #   info "Updating Docker cache..."
      #   run_remote "sudo chmod 755 /vagrant/docker_save_images && /vagrant/docker_save_images"
      # end
    end
    
    CHEF_JSON = JSON.parse(Pathname(__FILE__).dirname.join('.', 'chef.json').read)
    
    host.vm.provision "chef_solo" do |chef|
      # Solves the Chef SSL warning
      # http://stackoverflow.com/questions/22991561/chef-solo-ssl-warning-when-provisioning
      chef.custom_config_path = "vagrant_chef_config"
      chef.cookbooks_path = "./chef-repo/cookbooks"
      chef.roles_path = "./chef-repo/roles"
      chef.data_bags_path = "./chef-repo/data_bags"
      
      CHEF_JSON['run_list'].each do |recipe|
        puts recipe
        chef.add_recipe(recipe)
      end if CHEF_JSON['run_list']
      
      # Recipe is broken since it uses deprecated download URLs
      # see https://github.com/opscode/opscode-omnitruck#deprecated-urls
      #"package_file" => "https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/12.04/x86_64/chef-server_11.1.3-1_amd64.deb"
      #"package_file" => "https://opscode-omnibus-packages.s3.amazonaws.com/el/6/x86_64/chef-server-11.1.6-1.el6.x86_64.rpm"
      chef.run_list = CHEF_JSON.delete('run_list')
      chef.json = CHEF_JSON
    end
    
    host.vm.provision "shell", path: "../data/scripts/chef/init_chef_server"
    # TODO make sure chef-repo is up to date before uploading it (install git, git pull...)
    # TODO login and do as vagrant user
    # sudo su vagrant && cd /vagrant/chef-repo/ && git pull && sudo knife cookbook upload --all
    host.vm.provision "shell", inline: "sudo knife cookbook upload --all"
  end
end
