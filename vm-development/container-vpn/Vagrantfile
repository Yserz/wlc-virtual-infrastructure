# -*- mode: ruby -*-
# vi: set ft=ruby :

require_relative '../../xt/preamble.rb'
require_relative '../../xt/butcher_monkeypatch.rb'

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'docker'
ENV['VAGRANT_LOG'] = 'info'
ENV['CHEF_LOG'] = 'info'
VAGRANTFILE_API_VERSION = "2"

######################################################
#                                                    #
#                    CONTAINER-VPN                   #
#                    *************                   #
#                                                    #
######################################################
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Checks prequisites and plugins
  pre = Preamble.new(config, ">= 1.6.5")
  
  ######### CACHIER
  # Configure cached packages to be shared between instances of the same base box.
  # More info on http://fgrehm.viewdocs.io/vagrant-cachier/usage
  config.cache.scope = :box
  
  ######### OMNIBUS
  # config.omnibus.install_url = 'http://acme.com/install.sh'
  config.omnibus.chef_version = "12.0.0" # :latest
  
  ######### VBGUEST
  #config.vbguest.auto_update = false
  # do NOT download the iso file from a webserver
  config.vbguest.no_remote = true
  # Whether to check the correct additions version only.
  config.vbguest.no_install = true
  
  ######### BUTCHER
  config.butcher.enabled = true # Default
  config.butcher.verify_ssl = false
  #config.butcher.client_key = "local-workstation.pem"
  #config.butcher.client_name = "root"
  
  config.vm.define 'container-vpn' do |vpn|
    
    # Chef-Workstation
    vpn.vm.hostname = 'container-vpn'
    vpn.vm.network "private_network", ip: "192.168.2.3"
    vpn.vm.network :forwarded_port,
      guest: 22,
      host: 2203
    vpn.vm.boot_timeout = 200
    #vpn.ssh.username = "vagrant"
    #vpn.ssh.private_key_path = "../key.pem"
    vpn.ssh.host = "localhost"
    vpn.ssh.port = 2203
    
    
    vpn.vm.provider "docker" do |d|
      d.privileged = true
      d.volumes = [
        "/data:/data", 
        "/sys/fs/cgroup:/sys/fs/cgroup:ro"
      ]
      d.expose = [1194]
      d.ports = ["1194:1194"]
      d.image = "yserz/docker-vagrant-centos-7-minivm_chef"
      d.vagrant_machine = "vm-development"
      d.vagrant_vagrantfile = "../Vagrantfile"
      d.force_host_vm = true
      d.has_ssh = true
    end
    
    CHEF_JSON = JSON.parse(Pathname(__FILE__).dirname.join('.', 'chef.json').read)
    
    vpn.vm.provision "chef_client" do |chef|
      # Solves the Chef SSL warning
      # http://stackoverflow.com/questions/22991561/chef-solo-ssl-warning-when-provisioning
      # Note: This function needs a SSL-Certificate installed in Chef-Server
      #chef.custom_config_path = "vagrant_chef_config"
      
      #chef.encrypted_data_bag_secret_key_path = "../data_bag_key.pem"
      chef.chef_server_url = "https://192.168.1.2:9191/"
      chef.validation_key_path = "../../data/credentials/chef/chef-validator.pem" # scope local
      #chef.client_key_path = "/vagrant/local-workstation.pem"
      #chef.log_level = :info
      
      CHEF_JSON['run_list'].each do |recipe|
        puts recipe
        chef.add_recipe(recipe)
      end if CHEF_JSON['run_list']
      
      chef.run_list = CHEF_JSON.delete('run_list')
      chef.json = CHEF_JSON
    end
    
  end
end
