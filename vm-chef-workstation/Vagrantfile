# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'json'
require_relative '../xt/preamble.rb'
require_relative '../xt/hardware.rb'
require_relative '../xt/cachier_monkeypatch.rb'
require_relative '../xt/browser.rb'

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'
ENV['VAGRANT_LOG'] = 'debug'
VAGRANTFILE_API_VERSION = "2"


CONFIG = File.join(File.dirname(__FILE__), "config.rb")

# Defaults for config options defined in CONFIG
# FIX https://github.com/coreos/coreos-vagrant/issues/98
$enable_serial_logging = false

if File.exist?(CONFIG)
  require CONFIG
end

######################################################
#                                                    #
#                VM-CHEF-WORKSTATION                 #
#                *******************                 #
#                                                    #
######################################################
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Checks prequisites and plugins
  pre = Preamble.new(config, ">= 1.7.1")
  
  ######### CACHIER
  config.cache.scope = :box
  
  ######### OMNIBUS
  config.omnibus.chef_version = "12.0.0" # :latest
  
  ######### VBGUEST
  #config.vbguest.auto_update = false
  # do NOT download the iso file from a webserver
  config.vbguest.no_remote = true
  # Whether to check the correct additions version only.
  config.vbguest.no_install = true
  
  ######### BUTCHER
  config.butcher.enabled = true # Default
  config.butcher.verify_ssl = false
  #config.butcher.client_key = "local-workstation.pem"
  #config.butcher.client_name = "root"
  
  # Calculate Resources
  hard = Hardware.new(8, 6144) # CPUs, RAM
  using_cpus = hard.processing_units
  using_memory = hard.memory_mb / 4 # 1/4 RAM
  puts "Found #{hard.processing_units} Cores. Using #{using_cpus} Cores"
  puts "Found #{hard.memory_mb} MB Memory. Using #{using_memory} MB Memory"
  
  
  
  config.vm.network :private_network, ip: "192.168.1.3"
  
  config.vm.synced_folder "../data/global", "/globaldata"
  config.vm.synced_folder "../data/chef-client/", "/data/chef-client"
  
  config.vm.provider :virtualbox do |vb|
    vb.name = "vm-chef-workstation"
    vb.customize ["modifyvm", :id, "--cpuexecutioncap", "80"]
    vb.customize ["modifyvm", :id, "--cpus", using_cpus]
    vb.customize ["modifyvm", :id, "--memory", using_memory]
    vb.gui = false
    
    # Fix tsc unstable -> "kernel: Clocksource tsc unstable (delta = 302978408 ns).  Enable clocksource failover by adding clocksource_failover kernel parameter."
    vb.customize ["guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--enable-timesync"]
    # Fix symlinks -> Vagrant-713: https://github.com/mitchellh/vagrant/issues/713
    vb.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root", "1"]
    vb.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate//data", "1"]
    vb.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate//tmp/vagrant-cache", "1"]
  end
  
  
  config.vm.define "vm-chef-workstation" do |ws|
    ws.vm.hostname = "vm-chef-workstation"
    ws.vm.box = "wlc/centos-7.0"
    
    # Provide docker for test kitchen boxes
    ws.vm.provision :docker
    # ws.vm.provision :shell, path: "../data/global/script/docker/docker_load_images"
    # ws.vm.provision :docker do |d|
    #   d.build_image "/globaldata/container/minivm_sysd", args: "-t yserz/docker-vagrant-centos-7-minivm"
    #   d.version = :latest # Default is :latest
    # end
    # ws.vm.provision :docker do |d|
    #   d.build_image "/globaldata/container/minivm_sysd_chef", args: "-t yserz/docker-vagrant-centos-7-minivm_chef"
    #   d.version = :latest # Default is :latest
    # end
    # ws.vm.provision :shell, path: "../data/global/script/docker/docker_save_images"
    
    # prepare and install berkshelf
    # ws.vm.provision :shell, inline: "sudo yum -y install qt-x11 gcc-c++ autoconf"
    # ws.vm.provision :shell, inline: "\
    # rpm -q gecode || (\
    #   curl -LO ftp://ftp.univie.ac.at/systems/linux/fedora/epel/6/x86_64/gecode-3.7.3-3.el6.x86_64.rpm && \
    #   sudo rpm -Uh gecode-3.7.3-3.el6.x86_64.rpm && \
    #   rm gecode-3.7.3-3.el6.x86_64.rpm\
    # )"
    # ws.vm.provision :shell, inline: "\
    # rpm -q gecode-devel || (\
    #   curl -LO ftp://ftp.univie.ac.at/systems/linux/fedora/epel/6/x86_64/gecode-devel-3.7.3-3.el6.x86_64.rpm && \
    #   sudo rpm -Uh gecode-devel-3.7.3-3.el6.x86_64.rpm && \
    #   rm gecode-devel-3.7.3-3.el6.x86_64.rpm\
    # )"
    
    ws.vm.provision :chef_client do |chef|
      chef.custom_config_path = "vagrant_chef_config"
      chef.chef_server_url = "https://192.168.1.2:9191/"
      chef.validation_key_path = "../data/chef-client/credentials/chef-validator.pem"
      chef.environment = "development"
      chef.add_role "chef_workstation"
    end
    
    ws.vm.provision :shell do |s|
     p = File.expand_path("../../", __FILE__)
     s.path = p + "/data/chef-client/script/init_knife"
    end
    
    # link rubygems
    # ws.vm.provision :shell, inline: "sudo ln -s -f /opt/chef/embedded/bin/gem /usr/bin/gem"
    # ws.vm.provision :shell, inline: "sudo NOKOGIRI_USE_SYSTEM_LIBRARIES=1 USE_SYSTEM_GECODE=1 gem install berkshelf test-kitchen bundler --no-ri --no-rdoc"
    # copy berkshelf config
    ws.vm.provision :shell, inline: "(test -d /home/vagrant/.berkshelf || mkdir -p /home/vagrant/.berkshelf) && cp /data/chef-client/config/config.json /home/vagrant/.berkshelf/config.json && chown -R vagrant:vagrant /home/vagrant/.berkshelf"
    
    # ws.vm.provision :shell, inline: "\
    # sudo ln -s -f /opt/chef/embedded/bin/berks /usr/bin/berks && \
    # sudo ln -s -f /opt/chef/embedded/bin/kitchen /usr/bin/kitchen && \
    # sudo ln -s -f /opt/chef/embedded/bin/bundle /usr/bin/bundle"
    # get current wlc-chef-repo
    ws.vm.provision :shell, inline: "su vagrant -c echo 'export VISUAL=vim' >> ~/.bash_profile && su vagrant -c echo 'export EDITOR=$VISUAL' >> ~/.bash_profile"
    ws.vm.provision :shell, inline: "su vagrant -c 'git clone https://github.com/welovecoding/wlc-chef-repo.git /vagrant/wlc-chef-repo > /dev/null 2>&1' || su vagrant -c 'cd /vagrant/wlc-chef-repo && git pull'"
    #ws.vm.provision :shell, inline: "rm -rf /vagrant/wlc-chef-repo && su vagrant -c 'git clone https://github.com/welovecoding/wlc-chef-repo.git /vagrant/wlc-chef-repo'"
    # set EDITOR for git

    
  end
end
